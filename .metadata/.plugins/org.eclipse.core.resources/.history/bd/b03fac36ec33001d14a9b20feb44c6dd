package net.javaguides.springboot.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import net.javaguides.springboot.model.Employee;
import net.javaguides.springboot.service.EmployeeService;




@RestController
@RequestMapping("/api/employee")
public class EmployeeController {

	private EmployeeService employeeservice;

	public EmployeeController(EmployeeService employeeservice) {
		super();
		this.employeeservice = employeeservice;
	}
	
	
	// Build create employee rest api
	@PostMapping("/add")
	public ResponseEntity<Employee> saveEmployee(@RequestBody  Employee employee){
		return new ResponseEntity<Employee>(employeeservice.saveEmployee(employee), HttpStatus.CREATED);
	}
	
	//built get all employee REST  Api
	@GetMapping("/view")
	public List<Employee> getAllEmployee(){
		return employeeservice.getAllEmployee();
	}
	
	
	//built employee by id rest api
	@GetMapping("{id}")
	public ResponseEntity<Employee> getEmployeeById(@PathVariable("id") long empid){
		return new ResponseEntity<Employee>(employeeservice.getEmployeeById(empid), HttpStatus.OK);
	}
	
	
	//build update employee rest api
	@PutMapping("update/{id}")
	public ResponseEntity<Employee> updateEmployee(@PathVariable("id") long id, @RequestBody Employee employee){
		
		
		return new ResponseEntity<Employee>(employeeservice.UpdateEmployee(employee, id), HttpStatus.OK);
	}
	
	
	//build rest api for deleting 
	@DeleteMapping("delete/{id}")
	public ResponseEntity<String> deleteEmployee(@PathVariable("id") long id){
		
		employeeservice.deleteEmployee(id);
		
		return new ResponseEntity<String>("Employee deleted successfully", HttpStatus.OK);
		
	}
	
	
	
	
	
	
	
	
	
}
